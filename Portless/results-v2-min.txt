const totalPrice=sessionStorage.getItem("totalPrice");let dataInputs=JSON.parse(sessionStorage.getItem("dataInputs")),dataCalculations=JSON.parse(sessionStorage.getItem("dataCalculations")),grandTotalPrice=(parseFloat(totalPrice)+parseFloat(dataInputs.costPerUnit)).toFixed(2);const PORTLES_PRICE_MIN_MAX_CALC=10;let curency="$";const VOLUMETRIC_WEIGHT_RATIO_METRIC=8e3;let UNIT_LENGTH,UNIT_WEIGTH,UNIT_LENGTH_VOLUME;"imperial"===dataInputs.unitType?(UNIT_LENGTH="inches",UNIT_WEIGTH="lbs",UNIT_LENGTH_VOLUME=" cubic inches"):(UNIT_LENGTH="cm",UNIT_WEIGTH="kg",UNIT_LENGTH_VOLUME=" cubic centimeters"),document.getElementById("display_item-volume").innerHTML=(dataInputs.itemHeight*dataInputs.itemLength*dataInputs.itemWidth).toFixed(2)+UNIT_LENGTH_VOLUME;let containerType="",containerDetails="",tableRowIndirectCostSpan=2,tableRowCustomCost=2;"AirFreight"===dataInputs.currentImportMethod?tableRowCustomCost=1:("LCL"===dataInputs.containerSize?(containerType=" units</strong> in an LCL shipment ",containerDetails="(assuming the industry average of 55 cubic feet (1.55 cubic meters) per LCL shipment).",tableRowIndirectCostSpan=1):"20FT"===dataInputs.containerSize?(containerType=" units</strong> in a 20 foot container ",containerDetails="(assuming the industry standard of 1,170.23 cubic feet container max volume and an <strong>80.1% utilization rate</strong>)."):"40FT"===dataInputs.containerSize&&(containerType=" units</strong> in a 40 foot container ",containerDetails="(assuming the industry standard of 2,386.08 cubic feet container max volume and an <strong>80.1% utilization rate</strong>)."),document.getElementById("display_items-per-container").innerHTML="You can therefore fit: <strong>"+Math.round(dataCalculations.maxUnitsPerContainer).toLocaleString()+containerType+containerDetails+"</strong>"),document.getElementById("display-3pl-size").innerHTML=(dataInputs.itemHeight*dataInputs.itemLength*dataInputs.itemWidth).toFixed(2)+UNIT_LENGTH_VOLUME,document.getElementById("display-3pl-units-on-palete").innerHTML=Math.round(dataCalculations.calculatedItemsPerPallet).toLocaleString(),document.getElementById("display-day-payment-01").innerHTML=dataCalculations.daysUntilPayment,document.getElementById("display-day-payment-02").innerHTML=dataCalculations.daysUntilPayment,document.getElementById("display-financing-units-month").innerHTML=parseInt(dataInputs.unitsPerMonth).toLocaleString(),document.getElementById("display-financing-cost-unit").innerHTML=curency+dataInputs.costPerUnit;let costPerMonthInventory=roundToTwoDecimalPlaces(dataInputs.unitsPerMonth*dataInputs.costPerUnit*(dataCalculations.apr/12/100));document.getElementById("display-financing-aprox-price").innerHTML=curency+costPerMonthInventory.toLocaleString()+".";let finsncingFlowCycle=costPerMonthInventory*daysToMonth(dataCalculations.daysUntilPayment);document.getElementById("display-financing-flow-cycle").innerHTML=finsncingFlowCycle.toLocaleString();let averageCostPerUnit=finsncingFlowCycle/dataInputs.unitsPerMonth;document.getElementById("display-financing-per-unit").innerHTML=averageCostPerUnit;const inventoryBlock=document.getElementById("display-inventory-block");if(inventoryBlock.style.display="none",dataCalculations.overstockClearanceItems>0){inventoryBlock.style.display="block",document.getElementById("display-inventory-cost-unit").innerHTML=curency+dataInputs.costPerUnit,document.getElementById("display-inventory-overstock").innerHTML=dataCalculations.overstockClearanceItems;let t=roundToTwoDecimalPlaces(dataInputs.costPerUnit*dataCalculations.overstockClearanceItems/100);document.getElementById("display-inventory-average").innerHTML=curency+t,document.getElementById("display-inventory-average-unit").innerHTML=curency+t}const calcDetailsWrap=document.getElementById("calc_details-wrap"),calcTableFreight=document.getElementById("calc_table-freight"),calcTable3pl=document.getElementById("calc_table-3pl"),calcPortlessPrice=document.getElementById("portless-calc_price"),calcPortlessNoPrice=document.getElementById("portless-calc_no-price"),calcPortlessPriceMin=document.getElementById("display-portless-price-min"),calcPortlessPriceMax=document.getElementById("display-portless-price-max");for(let t in dataCalculations)dataCalculations[t]=(Math.round(100*(parseFloat(dataCalculations[t])+Number.EPSILON))/100).toFixed(2);let costPerUnit=roundToTwoDecimalPlaces(parseFloat(dataInputs.costPerUnit)).toFixed(2),calcDetails=`\n        <table class="calcDetailTable" id="main-table">\n        <tr><th colspan="2">Costs</th><th class="main-table_2nd-column-head">Fulfillment costs per item</th><th class="main-table_3nd-column-head">% of total price</th></tr>\n        <tr class="tableFirstRow"><td>Product Cost</td><td></td><td class="price main-table_2nd-column">${curency}${costPerUnit}</td><td class="price main-table_3nd-column">${percentInGrandTotal(costPerUnit)}</td></tr>\n  <tbody id="table-section_FreightCosts">\n        <tr><td rowspan="12">Freight Costs</td><td>Ocean Freight (Container Cost)</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.oceanFreight)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.oceanFreight)}</td></tr>\n        <tr><td>Importer Security Filing & Bond</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.importerSecurityFilingBondCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.importerSecurityFilingBondCalculated)}</td></tr>\n        <tr><td>Handling Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.handlingFeeCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.handlingFeeCalculated)}</td></tr>\n        <tr><td>Drayage</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.drayageCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.drayageCalculated)}</td></tr>\n        <tr><td>Chassis</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.chassisCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.chassisCalculated)}</td></tr>\n        <tr><td>Congestion Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.congestionFeeCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.congestionFeeCalculated)}</td></tr>\n        <tr><td>Security Surcharge</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.securitySurchargeCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.securitySurchargeCalculated)}</td></tr>\n        <tr><td>Inland Fuel Surcharge</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.inlandFuelSurchargeCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.inlandFuelSurchargeCalculated)}</td></tr>\n        <tr><td>Hazmat</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.hazmatCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.hazmatCalculated)}</td></tr>\n        <tr><td>Delivery</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.deliveryCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.deliveryCalculated)}</td></tr>\n        <tr><td>Detention Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.detentionFeeCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.detentionFeeCalculated)}</td></tr>\n        <tr><td>Pre-Pull</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.prePullCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.prePullCalculated)}</td></tr>\n  </tbody>\n        <tr id="table-section_Airfreight"><td>Air Freight</td><td></td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.airFreightCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.airFreightCalculated)}</td></tr>\n        <tr><td rowspan=${tableRowCustomCost}>Customs Costs</td><td>Customs / Tariff Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.customsTarifRate)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.customsTarifRate)}</td></tr >\n        <tr id="table-section_CustomClearance"><td>Custom Clearance</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.customsClearanceCalculated)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.customsClearanceCalculated)}</td></tr>\n        <tr><td rowspan="6">3PL / Shipping Fees</td><td>Monthly Account Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.monthlyAccountFee)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.monthlyAccountFee)}</td></tr>\n        <tr><td>Receiving / Inbound Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.receivingInboundFee)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.receivingInboundFee)}</td></tr>\n        <tr><td>Storage / Warehousing Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.storageWarehouseFee)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.storageWarehouseFee)}</td></tr>\n        <tr><td>Pick & Pack Fee</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.pickPackPerOrder)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.pickPackPerOrder)}</td></tr>\n        <tr><td>Material Fees</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.materiialsFeePerOrder)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.materiialsFeePerOrder)}</td></tr>\n        <tr><td>Shipping Cost</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.averageShippingCostPerOrder)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.averageShippingCostPerOrder)}</td></tr>\n        <tr><td rowspan=${tableRowIndirectCostSpan}>Indirect Costs</td><td>Inventory Financing Cost</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.inventoryFinancingCost)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.inventoryFinancingCost)}</td></tr>\n        <tr id="table-section_OverstockCost"><td>Overstock Cost</td><td class="price main-table_2nd-column">${lessThan001(dataCalculations.overstockCost)}</td><td class="price main-table_3nd-column">${percentInGrandTotal(dataCalculations.overstockCost)}</td></tr>\n        <tr class="total main-table_total-row"><td class="main-table_total-row"><strong>Totals</strong></td><td class="main-table_total-row"><strong>Total Price / Order</strong></td><td class="price main-table_total-row"><strong>${curency}${grandTotalPrice}</strong></td><td class="main-table_total-row"></td></tr>\n        </table>\n        `;calcDetailsWrap.innerHTML=calcDetails;let freightTotal=parseFloat(dataCalculations.oceanFreight)+parseFloat(dataCalculations.importerSecurityFilingBondCalculated)+parseFloat(dataCalculations.handlingFeeCalculated)+parseFloat(dataCalculations.drayageCalculated)+parseFloat(dataCalculations.chassisCalculated)+parseFloat(dataCalculations.congestionFeeCalculated)+parseFloat(dataCalculations.securitySurchargeCalculated)+parseFloat(dataCalculations.inlandFuelSurchargeCalculated)+parseFloat(dataCalculations.hazmatCalculated)+parseFloat(dataCalculations.deliveryCalculated)+parseFloat(dataCalculations.detentionFeeCalculated)+parseFloat(dataCalculations.prePullCalculated)+parseFloat(dataCalculations.customsTarifRate);calcTableFreight.innerHTML=`\n        <h2 class='small-table_heading'>Freight cost per unit</h2>\n        <table class="calcDetailTable">\n        <tr><td>Ocean Freight (Container Cost)</td><td class="price">${lessThan001(dataCalculations.oceanFreight)}</td></tr>\n        <tr><td>Importer Security Filing & Bond</td><td class="price">${lessThan001(dataCalculations.importerSecurityFilingBondCalculated)}</td></tr>\n        <tr><td>Handling Fee</td><td class="price">${lessThan001(dataCalculations.handlingFeeCalculated)}</td></tr>\n        <tr><td>Drayage</td><td class="price">${lessThan001(dataCalculations.drayageCalculated)}</td></tr>\n        <tr><td>Chassis</td><td class="price">${lessThan001(dataCalculations.chassisCalculated)}</td></tr>\n        <tr><td>Congestion Fee</td><td class="price">${lessThan001(dataCalculations.congestionFeeCalculated)}</td></tr>\n        <tr><td>Security Surcharge</td><td class="price">${lessThan001(dataCalculations.securitySurchargeCalculated)}</td></tr>\n        <tr><td>Inland Fuel Surcharge</td><td class="price">${lessThan001(dataCalculations.inlandFuelSurchargeCalculated)}</td></tr>\n        <tr><td>Hazmat</td><td class="price">${lessThan001(dataCalculations.hazmatCalculated)}</td></tr>\n        <tr><td>Delivery</td><td class="price">${lessThan001(dataCalculations.deliveryCalculated)}</td></tr>\n        <tr><td>Detention Fee</td><td class="price">${lessThan001(dataCalculations.detentionFeeCalculated)}</td></tr>\n        <tr><td>Pre-Pull</td><td class="price">${lessThan001(dataCalculations.prePullCalculated)}</td></tr>\n        <tr><td>Customs / Tariff Fee</td><td class="price">${lessThan001(dataCalculations.customsTarifRate)}</td></tr>\n        <tr class="total"><td><strong>Total freight cost per unit</strong></td><td class="price"><strong>${curency}${roundToTwoDecimalPlaces(freightTotal)}</strong></td></tr>\n        </table>\n        `;let table3plTotal=parseFloat(dataCalculations.monthlyAccountFee)+parseFloat(dataCalculations.receivingInboundFee)+parseFloat(dataCalculations.storageWarehouseFee)+parseFloat(dataCalculations.pickPackPerOrder)+parseFloat(dataCalculations.materiialsFeePerOrder)+parseFloat(dataCalculations.averageShippingCostPerOrder);calcTable3pl.innerHTML=`\n        <h2 class='small-table_heading'>3PL cost per unit</h2>\n        <table class="calcDetailTable">\n        <tr><td>Monthly Account Fee</td><td class="price">${lessThan001(dataCalculations.monthlyAccountFee)}</td></tr>\n        <tr><td>Receiving / Inbound Fee</td><td class="price">${lessThan001(dataCalculations.receivingInboundFee)}</td></tr>\n        <tr><td>Storage / Warehousing Fee</td><td class="price">${lessThan001(dataCalculations.storageWarehouseFee)}</td></tr>\n        <tr><td>Pick & Pack Fee</td><td class="price">${lessThan001(dataCalculations.pickPackPerOrder)}</td></tr>\n        <tr><td>Material Fees</td><td class="price">${lessThan001(dataCalculations.materiialsFeePerOrder)}</td></tr>\n        <tr><td>Shipping Cost</td><td class="price">${lessThan001(dataCalculations.averageShippingCostPerOrder)}</td></tr>\n        <tr class="total"><td><strong>Total 3PL cost per unit</strong></td><td class="price"><strong>${curency}${roundToTwoDecimalPlaces(table3plTotal)}</strong></td></tr>\n          </table>\n        `,"AirFreight"===dataInputs.currentImportMethod?(document.getElementById("table-section_FreightCosts").style.display="none",document.getElementById("table-section_CustomClearance").style.display=document.getElementById("freight-customs-wrap").style.display="none"):document.getElementById("table-section_Airfreight").style.display="none","LCL"===dataInputs.containerSize&&(document.getElementById("table-section_OverstockCost").style.display="none");const portlessInputTable=[{min:0,max:.25,price:4.72},{min:.25,max:.5,price:6.33},{min:.5,max:.75,price:7.94},{min:.75,max:.99,price:8.83},{min:1,max:1.25,price:9.34},{min:1.25,max:1.5,price:10.91},{min:1.5,max:1.75,price:12.21},{min:1.75,max:2,price:13.74},{min:2,max:2.25,price:15.27},{min:2.25,max:2.5,price:16.8},{min:2.5,max:2.75,price:18.33},{min:2.75,max:3,price:19.86},{min:3,max:3.25,price:21.39},{min:3.25,max:3.5,price:22.92},{min:3.5,max:3.75,price:24.45},{min:3.75,max:4,price:25.98},{min:4,max:4.25,price:27.51},{min:4.25,max:4.5,price:26.92},{min:4.5,max:4.75,price:28.33},{min:4.75,max:5,price:29.75},{min:5,max:5.25,price:31.16},{min:5.25,max:5.5,price:32.57},{min:5.5,max:5.75,price:33.98},{min:5.75,max:6,price:35.4},{min:6,max:6.25,price:36.81},{min:6.25,max:6.5,price:38.22},{min:6.5,max:6.75,price:39.63},{min:6.75,max:7,price:41.05},{min:7,max:7.25,price:42.46},{min:7.25,max:7.5,price:43.87},{min:7.5,max:7.75,price:45.28},{min:7.75,max:8,price:46.7},{min:8,max:8.25,price:48.11},{min:8.25,max:8.5,price:49.52},{min:8.5,max:8.75,price:50.93},{min:8.75,max:9,price:52.34},{min:9,max:9.25,price:53.76},{min:9.25,max:9.5,price:55.17},{min:9.5,max:9.75,price:56.58},{min:9.75,max:10,price:57.99}];let itemWeightCalculated,volumetricWeight=0;volumetricWeight="metric"===dataInputs.unitType?dataInputs.itemWidth*dataInputs.itemHeight*dataInputs.itemLength/8e3:2.54*dataInputs.itemWidth*(2.54*dataInputs.itemHeight)*(2.54*dataInputs.itemLength)/8e3*2.20462,"imperial"===dataInputs.unitType?weightFromUserInput=dataInputs.itemWeight:weightFromUserInput=2.20462*dataInputs.itemWeight,itemWeightCalculated=volumetricWeight>weightFromUserInput?volumetricWeight:weightFromUserInput;let portlessPrice=-1;for(let t=0;t<portlessInputTable.length;t++)itemWeightCalculated>portlessInputTable[t].min&&itemWeightCalculated<=portlessInputTable[t].max&&(portlessPrice=portlessInputTable[t].price);if(document.getElementById("cost-over").innerHTML="over "+curency+Math.floor(totalPrice).toLocaleString(),document.getElementById("display-portless-percentage").innerHTML=Math.round(totalPrice/grandTotalPrice*100)+"%",-1===portlessPrice)calcPortlessPrice.style.display="none",calcPortlessNoPrice.style.display="block";else{calcPortlessPrice.style.display="block",calcPortlessNoPrice.style.display="none";let t=portlessPrice-10*portlessPrice/100,a=portlessPrice+10*portlessPrice/100;calcPortlessPriceMin.innerHTML=curency+roundToTwoDecimalPlaces(t).toFixed(2),calcPortlessPriceMax.innerHTML=curency+roundToTwoDecimalPlaces(a).toFixed(2)}function roundToTwoDecimalPlaces(t){return Math.round(100*(t+Number.EPSILON))/100}function daysToMonth(t){return Math.round(100*(t/30+Number.EPSILON))/100}function lessThan001(t){return(t=parseFloat(t))<.01?"< "+curency+"0.01":curency+t.toFixed(2)}function percentInGrandTotal(t){return(t=(t=parseFloat(t))/grandTotalPrice*100)<.01?"< 0.01%":t.toFixed(2)+"%"}